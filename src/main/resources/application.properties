#spring.application.name=boir
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
spring.h2.console.enabled=true
spring.mvc.servlet.path= /
server.servlet.register-default-servlet=true
spring.datasource.url=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
spring.datasource.username=xxxxxxxxxxxxxxxx
spring.datasource.password=xxxxxxxxxxxxxxxxx
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = update
#spring.web.resources.static-locations=classpath:static,classpath:/public/,classpath:/META-INF/resources/,file:./resources/
stripe.key.public=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
stripe.key.secret=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#DON'T CACHE THYMELEAF FILES - FOR TEST PURPOSE ONLY
spring.thymeleaf.cache=false

#swagger-ui
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

#gcp upload configuration
gcp.config.file= xxxxxxxxxxxxxx
gcp.project.id=xxxxxxxxxxxxxxxx
gcp.bucket.id=xxxxxxxxxxxx
gcp.bucket.profile.id=xxxxxxxxx
gcp.dir.name=development
gcp.dir.profile.name=development/profile

#logging.level.org.springframework.security=DEBUG

#email Settings
spring.mail.host=smtp.zeptomail.com
spring.mail.port=587
spring.mail.username=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
spring.mail.password=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Configuration for Google
spring.security.oauth2.client.registration.google.client-id=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
spring.security.oauth2.client.registration.google.client-secret=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri-template=https://ctaappsec.micnxt.com/login/oauth2/code/google
spring.security.oauth2.client.registration.google.redirect-uri=https://ctaappsec.micnxt.com/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google

#spring.security.oauth2.client.registration.apple.client-id=YOUR_APPLE_CLIENT_ID
#spring.security.oauth2.client.registration.apple.client-secret=YOUR_APPLE_CLIENT_SECRET
#spring.security.oauth2.client.registration.apple.scope=name,email
#spring.security.oauth2.client.registration.apple.redirect-uri={baseUrl}/login/oauth2/code/apple
#spring.security.oauth2.client.registration.apple.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.apple.client-authentication-method=post
#spring.security.oauth2.client.registration.apple.client-name=Apple

#spring.security.oauth2.client.provider.apple.authorization-uri=https://appleid.apple.com/auth/authorize
#spring.security.oauth2.client.provider.apple.token-uri=https://appleid.apple.com/auth/token
#spring.security.oauth2.client.provider.apple.jwk-set-uri=https://appleid.apple.com/auth/keys

#api.nybacs.entity.service
nybacsAdmin.api.entity.service=https://nybacsdev.micnxt.com/jw/web/json/plugin/com.cta.service.EntityService/service

#api.nybacs.entity.service
nybacs.api.BOIR.service=https://nybacsdev.micnxt.com/jw/web/json/plugin/com.cta.service.BOIRService/service
nybacs.api.BOIR.env=test

benificialDomain=https://ctaappsec.micnxt.com/boirdetails
benificialEmailExpry=48

#Gcaptcha.sitekey
#unable to load the site key in boirfiling
gCapthca.sitekey=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

certificatePdfDomain=https://ctaappsec.micnxt.com/certificate/
certificateDomain=https://ctaappsec.micnxt.com/BOIRCertificate/
counter.boir=3000000

# Maximum size of a single uploaded file (e.g., 10MB)
spring.servlet.multipart.max-file-size=10MB

# Maximum size of the entire request (e.g., 10MB)
spring.servlet.multipart.max-request-size=10MB

# Payment gateway configuration
nybacs.payment.gateway.context=https://ctaappsec.micnxt.com/
nybacs.payment.gateway.receiptcontext=https://ctaappsec.micnxt.com/receipt/
nybacs.payment.gateway.chargecontext=https://ctaappsec.micnxt.com/charge/
nybacs.payment.gateway.tazapay.authorization=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
nybacs.payment.gateway.tazapay.context=https://service-sandbox.tazapay.com
Stripe.privatekey=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Stripe.apiKey=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
GeoIPService.apikey=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Redis Configuration
#spring.redis.host=xx.xxx.xx.xxx
spring.data.redis.host=xx.xxx.xx.xxx
spring.redis.port=6379
#spring.redis.url=redis://xx.xxx.xx.xxx:6379
 
# Session Configuration
spring.session.store-type=redis
spring.session.redis.flush-mode=on-save
spring.session.redis.namespace=spring:session
 
# Session timeout (in seconds)
server.servlet.session.timeout=1800
 
# Redis connection pool configuration (optional)
#spring.redis.lettuce.pool.max-active=8
#spring.redis.lettuce.pool.max-idle=8
#spring.redis.lettuce.pool.min-idle=0
#spring.redis.lettuce.pool.max-wait=-1ms
 
# If you need to use password (for Memorystore, you typically don't)
# spring.redis.password=your_redis_password
 
# SSL configuration (if needed)
# spring.redis.ssl=true